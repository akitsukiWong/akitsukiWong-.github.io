{"meta":{"title":"渣博客","subtitle":"哈哈哈","description":"汪秋月的个人博客","author":"汪秋月","url":"https://akitsukiwong.github.io"},"pages":[{"title":"关于我","date":"2018-05-10T16:15:47.000Z","updated":"2021-02-26T16:49:29.490Z","comments":true,"path":"about/index.html","permalink":"https://akitsukiwong.github.io/about/index.html","excerpt":"","text":"这是一个渣渣前端的个人博客 个人简历网站版 http://dflxm.oschina.io"},{"title":"canvas","date":"2021-02-05T02:11:19.000Z","updated":"2021-02-26T16:49:29.490Z","comments":true,"path":"canvas/index-1.html","permalink":"https://akitsukiwong.github.io/canvas/index-1.html","excerpt":"","text":"canvas var c = document.getElementById(“myCanvas”); var cxt = c.getContext(“2d”); cxt.fillStyle = “#FF0000”; cxt.fillRect(0, 0, 150, 75);"},{"title":"canvas","date":"2021-02-05T02:10:28.000Z","updated":"2021-02-26T16:49:29.490Z","comments":true,"path":"canvas/index.html","permalink":"https://akitsukiwong.github.io/canvas/index.html","excerpt":"","text":"canvas var c = document.getElementById(“myCanvas”); var cxt = c.getContext(“2d”); cxt.fillStyle = “#FF0000”; cxt.fillRect(0, 0, 150, 75);"},{"title":"啥啊","date":"2019-05-16T02:05:44.000Z","updated":"2021-02-26T16:49:29.528Z","comments":true,"path":"啥啊/index.html","permalink":"https://akitsukiwong.github.io/啥啊/index.html","excerpt":"","text":"12121得到"},{"title":"这是啥","date":"2019-05-16T02:05:25.000Z","updated":"2021-02-26T16:49:29.529Z","comments":true,"path":"这是啥/index.html","permalink":"https://akitsukiwong.github.io/这是啥/index.html","excerpt":"","text":"test"},{"title":"","date":"2021-02-26T16:49:29.491Z","updated":"2021-02-26T16:49:29.491Z","comments":true,"path":"demo/canvas/index.html","permalink":"https://akitsukiwong.github.io/demo/canvas/index.html","excerpt":"","text":"canvas 下面其实有个canvas 1&lt;canvas width=\"200\" height=\"100\"&gt;&lt;/canvas&gt;"},{"title":"","date":"2021-02-26T16:49:29.491Z","updated":"2021-02-26T16:49:29.491Z","comments":true,"path":"demo/canvas/arc.html","permalink":"https://akitsukiwong.github.io/demo/canvas/arc.html","excerpt":"","text":"canvas var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.beginPath(); ctx.arc(95, 50, 40, 0, 2 * Math.PI); ctx.stroke(); 12345678 &lt;canvas id=\"myCanvas\" width=\"200\" height=\"100\"&gt;&lt;/canvas&gt; &lt;script type=\"text/javascript\"&gt; var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.rect(10, 10, 50, 50); //创建矩形 ctx.stroke(); // 绘制图形&lt;/script&gt;"},{"title":"","date":"2021-02-26T16:49:29.491Z","updated":"2021-02-26T16:49:29.491Z","comments":true,"path":"demo/canvas/index2.html","permalink":"https://akitsukiwong.github.io/demo/canvas/index2.html","excerpt":"","text":"canvas var canvas = document.getElementById(\"myCanvas\"); //根据 id 找到 canvas 元素 var cxt = canvas.getContext(\"2d\"); //getContext() 方法返回一个用于在画布上绘图的环境 cxt.fillStyle = \"#FF0000\"; //填充颜色 不填充颜色默认为黑色 cxt.fillRect(0, 0, 100, 50); //规定了形状，位置，尺寸 12345678&lt;canvas id=\"myCanvas\" width=\"200\" height=\"100\"&gt;&lt;/canvas&gt;&lt;script type=\"text/javascript\"&gt; var canvas = document.getElementById(\"myCanvas\"); //根据 id 找到 canvas 元素 var cxt = canvas.getContext(\"2d\"); //getContext() 方法返回一个用于在画布上绘图的环境 cxt.fillStyle = \"#FF0000\"; //填充颜色 cxt.fillRect(0, 0, 100, 50); //规定了形状，位置，尺寸&lt;/script&gt;"},{"title":"","date":"2021-02-26T16:49:29.491Z","updated":"2021-02-26T16:49:29.491Z","comments":true,"path":"demo/canvas/flag.html","permalink":"https://akitsukiwong.github.io/demo/canvas/flag.html","excerpt":"","text":"flag var canvas = document.getElementById(\"myCanvas\"); //根据 id 找到 canvas 元素 var cxt = canvas.getContext(\"2d\"); //getContext() 方法返回一个用于在画布上绘图的环境 cxt.fillStyle = \"#FF0000\"; //填充颜色 不填充颜色默认为黑色 cxt.fillRect(0, 0, 100, 50); //规定了形状，位置，尺寸 cxt.fillStyle = \"#000000\" cxt.fillRect(0, 0, 3, 120); function waveFlag(canvas, wavelength, amplitude = 10, period = 200, shading = 100, squeeze = 0) { if (!wavelength) wavelength = canvas.width / 10; let fps = 30; let ctx = canvas.getContext('2d'); let w = canvas.width, h = canvas.height; let od = ctx.getImageData(0, 0, w, h).data; return (timer = setInterval(() => { let id = ctx.getImageData(0, 0, w, h); let d = id.data; let now = new Date() / period; for (let y = 0; y < h; ++y) { let lastO = 0, shade = 0; let sq = (y - h / 2) * squeeze; for (let x = 0; x < w; ++x) { let px = (y * w + x) * 4; let pct = x / w; let o = Math.sin(x / wavelength - now) * amplitude * pct; let y2 = (y + (o + sq * pct)) < 0; let opx = (y2 * w + x) * 4; shade = (o - lastO) * shading; d[px] = od[opx] + shade; d[px + 1] = od[opx + 1] + shade; d[px + 2] = od[opx + 2] + shade; d[px + 3] = od[opx + 3]; lastO = o; } } ctx.putImageData(id, 0, 0); }, 1000 / fps)); } waveFlag(canvas, 5, 10, 200, 10, 0.2);"},{"title":"","date":"2021-02-26T16:49:29.492Z","updated":"2021-02-26T16:49:29.492Z","comments":true,"path":"demo/canvas/index3.html","permalink":"https://akitsukiwong.github.io/demo/canvas/index3.html","excerpt":"","text":"canvas var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.rect(10, 10, 50, 50); //创建矩形 ctx.stroke(); // 绘制图形 12345678&lt;canvas id=\"myCanvas\" width=\"200\" height=\"100\"&gt;&lt;/canvas&gt; &lt;script type=\"text/javascript\"&gt; var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.rect(10, 10, 50, 50); //创建矩形 ctx.stroke(); // 绘制图形&lt;/script&gt;"},{"title":"","date":"2021-02-26T16:49:29.492Z","updated":"2021-02-26T16:49:29.492Z","comments":true,"path":"demo/canvas/line.html","permalink":"https://akitsukiwong.github.io/demo/canvas/line.html","excerpt":"","text":"canvas var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.beginPath(); ctx.moveTo(0, 0); ctx.lineTo(200, 100); ctx.stroke(); 1234567 &lt;canvas id=\"myCanvas\" width=\"200\" height=\"100\"&gt;&lt;/canvas&gt;&lt;script type=\"text/javascript\"&gt; var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.fillRect(10, 10, 50, 50); //绘制被填充的矩形，默认填充颜色是黑色&lt;/script&gt;"},{"title":"","date":"2021-02-26T16:49:29.493Z","updated":"2021-02-26T16:49:29.493Z","comments":true,"path":"demo/canvas/sin.html","permalink":"https://akitsukiwong.github.io/demo/canvas/sin.html","excerpt":"","text":"sin var i = 1; var x = 1; var y = 100; function moveSin() { var oCanvas = document.getElementById(\"theCanvas\"); var content = oCanvas.getContext(\"2d\"); content.beginPath(); content.moveTo(x, y); i += 0.1; x = i * 10; y = Math.sin(i) * 10 + 100; content.lineTo(x, y); content.stroke(); content.closePath(); } setInterval(moveSin, 10); window.onload = function () { moveSin(); }"},{"title":"","date":"2021-02-26T16:49:29.492Z","updated":"2021-02-26T16:49:29.492Z","comments":true,"path":"demo/canvas/index4.html","permalink":"https://akitsukiwong.github.io/demo/canvas/index4.html","excerpt":"","text":"canvas var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.fillRect(10, 10, 50, 50); //绘制被填充的矩形，默认填充颜色是黑色 1234567&lt;canvas id=\"myCanvas\" width=\"200\" height=\"100\"&gt;&lt;/canvas&gt;&lt;script type=\"text/javascript\"&gt; var c = document.getElementById(\"myCanvas\"); var ctx = c.getContext(\"2d\"); ctx.fillRect(10, 10, 50, 50); //绘制被填充的矩形，默认填充颜色是黑色&lt;/script&gt;"},{"title":"","date":"2021-02-26T16:49:29.493Z","updated":"2021-02-26T16:49:29.493Z","comments":true,"path":"demo/canvas/sin2.html","permalink":"https://akitsukiwong.github.io/demo/canvas/sin2.html","excerpt":"","text":"var curve = function () { var c = document.getElementById(\"study\"); var ctx = c.getContext(\"2d\"); //线条主色 var mianColor = \"#e2dedb\" //画图函数 var Drawing = { line: function (starxy, endxy, lineWidth, color) { ctx.strokeStyle = color; ctx.lineWidth = lineWidth; ctx.beginPath(); ctx.moveTo(starxy[0], starxy[1]); ctx.lineTo(endxy[0], endxy[1]); ctx.stroke(); }, ract: function (starxy, ractWH, color) { ctx.fillStyle = color; ctx.fillRect(starxy[0], starxy[1], ractWH[0], ractWH[1]); }, ractBorder: function (starxy, ractWH, color, lineWidth) { ctx.lineWidth = lineWidth; ctx.strokeStyle = color; ctx.strokeRect(starxy[0], starxy[1], ractWH[0], ractWH[1]); }, /*Drawing.triCurve(triangle, star, cp, color) triangle:三角函数 star：{x：开始x坐标，y：开始的y坐标} cp：{xw：控制x的宽度，yh：控制y的高度，s：位移} color：线条颜色 */ triCurve: function (triangle, star, cp, color) { ctx.strokeStyle = color; ctx.beginPath(); ctx.moveTo(star.x, star.y); //中心判断 var change = false; //中点计算 var count = cp.yh; for (var i = cp.s; i * cp.xw - cp.xw * cp.s + star.x < 600; i += 0.1) { count += 0.5; } var center = parseInt(count / 2); //三角函数曲线 for (var i = cp.s; i * cp.xw - cp.xw * cp.s + star.x < 600; i += 0.1) { if (change === false && cp.yh < center) { cp.yh += 0.5; } if (change === false && cp.yh === center) { change = true; cp.yh -= 0.5; } if (change === true && cp.yh < center) { cp.yh -= 0.5; } var x = i * cp.xw - cp.xw * cp.s + star.x; var y = Math[triangle](i * cp.angle) * cp.yh + star.y; ctx.lineTo(x, y); } ctx.stroke(); ctx.closePath(); }, } //背景填充 Drawing.ract([0, 0], [600, 360], \"#333333\"); //播放条 var play = function (btn) { ctx.clearRect(0, 0, 600, 130); Drawing.ract([0, 0], [600, 130], \"#333333\"); var playLineStar = [93, 105]; var playLineWH = [494, 105]; var playBtnWH = [11, 21]; Drawing.line(playLineStar, playLineWH, 4, mianColor); var playBtnStarX; var playBtnStarY = playLineWH[1] - playBtnWH[1] / 2; btn == undefined ? playBtnStarX = (playLineWH[0] + playLineStar[0]) / 2 - playBtnWH[0] / 2 : playBtnStarX = 4 * btn + playLineStar[0]; Drawing.ractBorder([playBtnStarX, playBtnStarY], playBtnWH, \"#9d9996\", 1); Drawing.ract([playBtnStarX += 1, playBtnStarY += 1], [playBtnWH[0] - 2, playBtnWH[1] - 2], mianColor); } play(); //鼠标滚动控制播放条 var waveGo; var distance = 0; var scrollFunc = function (e) { e = e || window.event; var mouseMove; e.wheelDelta ? mouseMove = e.wheelDelta : mouseMove = e.detail; if (mouseMove > 0) { distance += 5; if (distance >= 100) distance = 100; }//up if (mouseMove < 0) { distance -= 5; if (distance = 100 ? 100 : ad + 15; console.log(adjust); ctx.clearRect(0, 130, 600, 360); Drawing.ract([0, 130], [600, 360], \"#333333\"); if (dong === 1) { cango = false; } if (!cango && dong < 3) { dong += 1; } if (dong === 3) { cango = true; } if (cango && dong"}],"posts":[{"title":"canvas","slug":"canvas","date":"2021-02-05T01:53:00.000Z","updated":"2021-02-26T16:49:29.479Z","comments":true,"path":"2021/02/05/canvas/","link":"","permalink":"https://akitsukiwong.github.io/2021/02/05/canvas/","excerpt":"","text":"什么是canvas？ HTML5 元素 是一个矩形区域画布，可以控制其每一像素，用于在网页上绘制图形 canvas 本身并没有绘图能力，通常是通过js绘制 canvas 拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法 canvas 的历史和优势… 简单示例1&lt;canvas width=&quot;200&quot; height=&quot;100&quot;&gt;&lt;/canvas&gt; width: 宽度 height: 高度 demo canvas 元素本身是没有绘图能力的。所有的绘制工作必须在 JavaScript 内部完成 12345678&lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;100&quot;&gt;&lt;/canvas&gt;&lt;script type=&quot;text/javascript&quot;&gt; var canvas = document.getElementById(&quot;myCanvas&quot;); //根据 id 找到 canvas 元素 var cxt = canvas.getContext(&quot;2d&quot;); //getContext() 方法返回一个用于在画布上绘图的环境 cxt.fillStyle = &quot;#FF0000&quot;; //填充颜色 cxt.fillRect(0, 0, 100, 50); //规定了形状，位置，尺寸&lt;/script&gt; demo 基本形状线 圆 矩形 被填充的矩形 画一条正弦曲线 飘动的小红旗","categories":[],"tags":[{"name":"canvas","slug":"canvas","permalink":"https://akitsukiwong.github.io/tags/canvas/"}]}]}